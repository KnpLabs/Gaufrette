<?php
/**
 * Created by PhpStorm.
 * User: cwarner
 * Date: 10/1/13
 * Time: 4:59 PM
 */

namespace Gaufrette\Adapter;


use OpenCloud\Common\Exceptions\CreateUpdateError;
use OpenCloud\ObjectStore\Service;
use Gaufrette\Adapter\OpenStackCloudFiles\ConnectionFactoryInterface;
use OpenCloud\OpenStack;

class LazyOpenStackCloudFiles extends OpenCloud {

    /**
     * @var ConnectionFactoryInterface
     */
    protected $connectionFactory;

    /**
     * @var bool
     */
    protected $connected = false;

    /**
     * @param ConnectionFactoryInterface $connectionFactory
     * @param $containerName
     * @param bool $createContainer
     * @param bool $detectContentType
     */
    public function __construct($connectionFactory, $containerName, $createContainer = false, $detectContentType = true)
    {
        $this->connectionFactory = $connectionFactory;
        $this->containerName = $containerName;
        $this->createContainer = $createContainer;
        $this->detectContentType = $detectContentType;

    }

    public function read($key)
    {
        $this->connect();
        return parent::read($key); // TODO: Change the autogenerated stub
    }

    public function write($key, $content)
    {
        $this->connect();
        return parent::write($key, $content); // TODO: Change the autogenerated stub
    }

    public function exists($key)
    {
        $this->connect();
        return parent::exists($key); // TODO: Change the autogenerated stub
    }

    public function keys()
    {
        $this->connect();
        return parent::keys(); // TODO: Change the autogenerated stub
    }

    public function delete($key)
    {
        $this->connect();
        return parent::delete($key); // TODO: Change the autogenerated stub
    }

    public function rename($sourceKey, $targetKey)
    {
        $this->connect();
        parent::rename($sourceKey, $targetKey); // TODO: Change the autogenerated stub
    }

    public function isDirectory($key)
    {
        $this->connect();
        return parent::isDirectory($key); // TODO: Change the autogenerated stub
    }

    public function checksum($key)
    {
        $this->connect();
        return parent::checksum($key); // TODO: Change the autogenerated stub
    }

    public function mtime($key)
    {
        $this->connect();
        return parent::mtime($key); // TODO: Change the autogenerated stub
    }


    protected function connect()
    {
        if(!$this->connected){
            /** @var OpenStack $connection */
            $connection = $this->connectionFactory->create();

            $objectStore = $connection->objectStore();

            $this->objectStore = $objectStore;
        }
    }

} 
